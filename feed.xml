<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://unlqsting.github.io/AP-Comp-fastpages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://unlqsting.github.io/AP-Comp-fastpages/" rel="alternate" type="text/html" /><updated>2022-11-07T15:24:39-06:00</updated><id>https://unlqsting.github.io/AP-Comp-fastpages/feed.xml</id><title type="html">Do you even blog?</title><subtitle>A blogging site for AP Computer Science</subtitle><entry><title type="html">Scheduler progress check</title><link href="https://unlqsting.github.io/AP-Comp-fastpages/planning/progress/pbl/2022/11/06/SchedulerProgress.html" rel="alternate" type="text/html" title="Scheduler progress check" /><published>2022-11-06T00:00:00-05:00</published><updated>2022-11-06T00:00:00-05:00</updated><id>https://unlqsting.github.io/AP-Comp-fastpages/planning/progress/pbl/2022/11/06/SchedulerProgress</id><author><name></name></author><category term="planning" /><category term="progress" /><category term="PBL" /><summary type="html"><![CDATA[So... we finished. But how did we get here?]]></summary></entry><entry><title type="html">College Board Error testing</title><link href="https://unlqsting.github.io/AP-Comp-fastpages/python/errortesting/collegeboard/2022/11/06/Menu.html" rel="alternate" type="text/html" title="College Board Error testing" /><published>2022-11-06T00:00:00-05:00</published><updated>2022-11-06T00:00:00-05:00</updated><id>https://unlqsting.github.io/AP-Comp-fastpages/python/errortesting/collegeboard/2022/11/06/Menu</id><author><name></name></author><category term="python" /><category term="errortesting" /><category term="collegeboard" /><summary type="html"><![CDATA[Quite self-explanatory]]></summary></entry><entry><title type="html">Systems</title><link href="https://unlqsting.github.io/AP-Comp-fastpages/planning/2022/10/13/System2SystemAPI.html" rel="alternate" type="text/html" title="Systems" /><published>2022-10-13T00:00:00-05:00</published><updated>2022-10-13T00:00:00-05:00</updated><id>https://unlqsting.github.io/AP-Comp-fastpages/planning/2022/10/13/System2SystemAPI</id><author><name></name></author><category term="planning" /><summary type="html"><![CDATA[This post has the responses to the systems to systems api assignment.]]></summary></entry><entry><title type="html">College Board Error testing</title><link href="https://unlqsting.github.io/AP-Comp-fastpages/python/errortesting/collegeboard/2022/10/12/Menu.html" rel="alternate" type="text/html" title="College Board Error testing" /><published>2022-10-12T00:00:00-05:00</published><updated>2022-10-12T00:00:00-05:00</updated><id>https://unlqsting.github.io/AP-Comp-fastpages/python/errortesting/collegeboard/2022/10/12/Menu</id><author><name></name></author><category term="python" /><category term="errortesting" /><category term="collegeboard" /><summary type="html"><![CDATA[Quite self-explanatory]]></summary></entry><entry><title type="html">Python Web API Endpoints using Jokes</title><link href="https://unlqsting.github.io/AP-Comp-fastpages/3.b/5.a/5.b/2022/10/10/PBL-webapi_tutorial.html" rel="alternate" type="text/html" title="Python Web API Endpoints using Jokes" /><published>2022-10-10T00:00:00-05:00</published><updated>2022-10-10T00:00:00-05:00</updated><id>https://unlqsting.github.io/AP-Comp-fastpages/3.b/5.a/5.b/2022/10/10/PBL-webapi_tutorial</id><author><name></name></author><category term="3.B" /><category term="5.A" /><category term="5.B" /><summary type="html"><![CDATA[A discussion on Web APIs. This is about creating a Web API (Jokes), and creating API that retains data as long as the Web Server is running. This is done using List and Dictionaries as the backend. Ultimately, this example could be extended by adding a database to the backend. However, for now, we are focussing on interaction of Frontend to Backend, this is called an Endpoint.]]></summary></entry></feed>